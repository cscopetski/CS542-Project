{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\lukec\\\\WPI_Senior_Year\\\\Semester_2\\\\Database Management Systems\\\\Final_Project\\\\flextrack\\\\src\\\\challenges\\\\Challenges.js\",\n  _s = $RefreshSig$();\nimport { useEffect, useState } from \"react\";\nimport * as React from 'react';\nimport { useNavigate } from \"react-router-dom\";\nimport axios from \"axios\";\nimport './Challenges.css';\n\n/* function Challenges(props) {\r\n    const navigate = useNavigate();\r\n\r\n    return (\r\n        <div className=\"display-container\">\r\n            <div className=\"top-message\">\r\n                Welcome to the Challenges Page!\r\n            </div>\r\n            <a className=\"orange-link\" onClick={() => { navigate(\"/dashboard\"); }}>Dashboard Page!</a>\r\n            <a className=\"orange-link\" onClick={() => { navigate(\"/createworkoutplan\"); }}>Create Workout Page!</a>\r\n            <a className=\"orange-link\" onClick={() => { navigate(\"/viewworkout\"); }}>View Workout Page!</a>\r\n            <a className=\"orange-link\" onClick={() => { navigate(\"/social\"); }}>Social Page!</a>\r\n            <a className=\"orange-link\" onClick={() => { navigate(\"/challenges\"); }}>Challenges Page!</a>\r\n            <a className=\"orange-link\" onClick={() => { navigate(\"/settings\"); }}>Settings Page!</a>\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default Challenges; */\n/*\r\nimport React from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport './ChallengeDetail.css'; // Ensure this is the correct path to your CSS file\r\n*/\n\n/*function Challenges() {\r\n    const navigate = useNavigate();\r\n\r\n    // You would fetch the actual challenges from your state or props\r\n    const challenges = [\r\n        { id: 1, name: 'MIKEYLIFTS204', description: 'Deadlift, Bench Pre...' },\r\n        { id: 2, name: 'JAGRUTIGAINZ333', description: 'Squat, Incline Dumbe...' },\r\n        // ... other challenges\r\n    ];\r\n\r\n    return (\r\n        <div className=\"challenge-layout\">\r\n            <aside className=\"sidebar\">\r\n                <h1>Challenges Home Page</h1>\r\n                <div className=\"challenge-list\">\r\n                    {challenges.map(challenge => (\r\n                        <div key={challenge.id} className=\"challenge-item\" onClick={() => navigate('/challenge/${challenge.id}')}>\r\n                            <div className=\"challenge-title\">{challenge.name}</div>\r\n                            <div className=\"challenge-description\">{challenge.description}</div>\r\n                        </div>\r\n                    ))}\r\n                </div>\r\n                <button className=\"new-challenge-btn\" onClick={() => navigate('/new-challenge')}>New Challenge</button>\r\n            </aside>\r\n\r\n            <footer className=\"bottom-nav\">\r\n                <span onClick={() => navigate('/home')}>H</span>\r\n                <span onClick={() => navigate('/challenges')}>CHL</span>\r\n                <span onClick={() => navigate('/friends')}>FRN</span>\r\n                <span onClick={() => navigate('/settings')}>SET</span>\r\n            </footer>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Challenges;\r\n*/\n\n/*\r\n\r\nfunction Challenges() {\r\n    const navigate = useNavigate();\r\n\r\n    const challenges = [\r\n        { id: 1, name: 'MIKEYLIFTS204', description: 'Deadlift, Bench Pre...' },\r\n        { id: 2, name: 'JAGRUTIGAINZ333', description: 'Squat, Incline Dumbe...' },\r\n        // ... other challenges\r\n    ];\r\n\r\n    const navigateToChallenge = (id) => {\r\n        navigate('/challenge/${id}');\r\n    };\r\n\r\n    const navigateToNewChallenge = () => {\r\n        navigate('/new-challenge');\r\n    };\r\n\r\n    return (\r\n        <div className=\"challenge-layout\">\r\n            <header className=\"challenge-header\">\r\n                <h1>Challenges Home Page</h1>\r\n            </header>\r\n            \r\n            <div className=\"challenge-list\">\r\n                {challenges.map(challenge => (\r\n                    <div key={challenge.id} className=\"challenge-item\" onClick={() => navigateToChallenge(challenge.id)}>\r\n                        <div className=\"challenge-name\">{challenge.name}</div>\r\n                        <div className=\"challenge-description\">{challenge.description}</div>\r\n                    </div>\r\n                ))}\r\n                <button className=\"new-challenge-btn\" onClick={navigateToNewChallenge}>New Challenge</button>\r\n            </div>\r\n\r\n            <footer className=\"bottom-nav\">\r\n                <span onClick={() => navigate('/home')}>H</span>\r\n                <span onClick={() => navigate('/challenges')}>CHL</span>\r\n                <span onClick={() => navigate('/friends')}>FRN</span>\r\n                <span onClick={() => navigate('/settings')}>SET</span>\r\n            </footer>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Challenges;\r\n*/\n\n/*\r\nfunction Challenges() {\r\n    const navigate = useNavigate();\r\n\r\n    const [selectedChallenge, setSelectedChallenge] = useState(null);\r\n\r\n    const challenges = [\r\n        {\r\n            id: 1,\r\n            name: 'MIKEYLIFTS204',\r\n            exercises: [\r\n                { name: 'Deadlift', sets: ['5 reps', '3 reps', '1 rep', '3 reps'] },\r\n                { name: 'Bench Press', sets: ['8 reps', '4 reps', '2 reps', '1 rep'] },\r\n            ]\r\n        },\r\n        // Assume similar structure for other challenges...\r\n    ];\r\n\r\n    const selectChallenge = (challengeId) => {\r\n        const challenge = challenges.find(c => c.id === challengeId);\r\n        setSelectedChallenge(challenge);\r\n    };\r\n\r\n    const createNewChallenge = () => {\r\n        setSelectedChallenge({\r\n            id: challenges.length + 1,\r\n            name: '',\r\n            exercises: []\r\n        });\r\n        // Optionally navigate to a different route if necessary\r\n        // navigate('/new-challenge');\r\n    };\r\n\r\n    return (\r\n        <div className=\"challenge-layout\">\r\n            <header className=\"challenge-header\">\r\n                <h1>{selectedChallenge ? '${selectedChallenge.name} CHALLENGES YOU!' :'Challenges Home Page'}</h1>\r\n            </header>\r\n\r\n            <div className=\"challenge-list\">\r\n                {!selectedChallenge &&\r\n                    challenges.map((challenge) => (\r\n                        <div key={challenge.id} className=\"challenge-item\" onClick={() => selectChallenge(challenge.id)}>\r\n                            <div className=\"challenge-name\">{challenge.name}</div>\r\n                        </div>\r\n                    ))\r\n                }\r\n                {!selectedChallenge && <button className=\"new-challenge-btn\" onClick={createNewChallenge}>New Challenge</button>}\r\n\r\n                {selectedChallenge && selectedChallenge.exercises.map((exercise, index) => (\r\n                    <div key={index} className=\"exercise-detail\">\r\n                        <h2 className=\"exercise-name\">{exercise.name}</h2>\r\n                        {exercise.sets.map((set, index) => (\r\n                            <div key={index} className=\"set-detail\">{set}</div>\r\n                        ))}\r\n                        <button className=\"max-button\">Your Max</button>\r\n                    </div>\r\n                ))}\r\n            </div>\r\n\r\n            <footer className=\"bottom-nav\">\r\n                <span onClick={() => navigate('/home')}>H</span>\r\n                <span onClick={() => navigate('/challenges')}>CHL</span>\r\n                <span onClick={() => navigate('/friends')}>FRN</span>\r\n                <span onClick={() => navigate('/settings')}>SET</span>\r\n            </footer>\r\n        </div>\r\n    );\r\n}\r\n\r\n*/\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Challenges() {\n  _s();\n  const navigate = useNavigate();\n  const [selectedChallenge, setSelectedChallenge] = useState(null);\n  const challenges = [{\n    id: 1,\n    name: 'MIKEYLIFTS204',\n    exercises: [{\n      name: 'Deadlift',\n      sets: ['5 reps', '3 reps', '1 rep', '3 reps']\n    }, {\n      name: 'Bench Press',\n      sets: ['8 reps', '4 reps', '2 reps', '1 rep']\n    }]\n  },\n  // Additional challenges can be similarly structured\n  {\n    id: 2,\n    name: 'JAGRUTIGAINZ333',\n    exercises: [{\n      name: 'Deadlift',\n      sets: ['3 reps', '5 reps', '1 rep', '3 reps']\n    }, {\n      name: 'Squats',\n      sets: ['8 reps', '4 reps', '2 reps', '1 rep']\n    }]\n  }];\n  const selectChallenge = challengeId => {\n    const challenge = challenges.find(c => c.id === challengeId);\n    setSelectedChallenge(challenge);\n  };\n  const createNewChallenge = () => {\n    navigate('/friends'); // Redirects to the Friends page for selecting friends to challenge\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"challenge-layout\",\n    children: [/*#__PURE__*/_jsxDEV(\"header\", {\n      className: \"challenge-header\",\n      children: /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: selectedChallenge ? `${selectedChallenge.name.toUpperCase()} CHALLENGES YOU!` : 'Challenges Home Page'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 227,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 226,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"challenge-list\",\n      children: [!selectedChallenge && challenges.map(challenge => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"challenge-item\",\n        onClick: () => selectChallenge(challenge.id),\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"challenge-name\",\n          children: challenge.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 233,\n          columnNumber: 29\n        }, this)\n      }, challenge.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 232,\n        columnNumber: 25\n      }, this)), !selectedChallenge && /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"new-challenge-btn\",\n        onClick: () => {\n          navigate('/social');\n        },\n        children: \"New Challenge\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 237,\n        columnNumber: 40\n      }, this), selectedChallenge && selectedChallenge.exercises.map((exercise, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"exercise-detail\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          className: \"exercise-name\",\n          children: exercise.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 240,\n          columnNumber: 25\n        }, this), exercise.sets.map((set, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"set-detail\",\n          children: set\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 242,\n          columnNumber: 29\n        }, this)), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"max-button\",\n          children: \"Record Your Max\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 244,\n          columnNumber: 25\n        }, this)]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 239,\n        columnNumber: 21\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 229,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"footer\", {\n      className: \"bottom-nav\",\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        onClick: () => navigate('/home'),\n        children: \"HOME\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 249,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        onClick: () => navigate('/challenges'),\n        children: \"CHALLENGES\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 250,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        onClick: () => navigate('/friends'),\n        children: \"FRIENDS\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 251,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        onClick: () => navigate('/settings'),\n        children: \"SETTINGS\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 252,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 248,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 225,\n    columnNumber: 9\n  }, this);\n}\n_s(Challenges, \"hplJmm3dAFH9Ps6nzL5ItxUDGh0=\", false, function () {\n  return [useNavigate];\n});\n_c = Challenges;\nexport default Challenges;\nvar _c;\n$RefreshReg$(_c, \"Challenges\");","map":{"version":3,"names":["useEffect","useState","React","useNavigate","axios","jsxDEV","_jsxDEV","Challenges","_s","navigate","selectedChallenge","setSelectedChallenge","challenges","id","name","exercises","sets","selectChallenge","challengeId","challenge","find","c","createNewChallenge","className","children","toUpperCase","fileName","_jsxFileName","lineNumber","columnNumber","map","onClick","exercise","index","set","_c","$RefreshReg$"],"sources":["C:/Users/lukec/WPI_Senior_Year/Semester_2/Database Management Systems/Final_Project/flextrack/src/challenges/Challenges.js"],"sourcesContent":["import { useEffect,useState } from \"react\";\r\nimport * as React from 'react';\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport axios from \"axios\";\r\nimport './Challenges.css';\r\n\r\n/* function Challenges(props) {\r\n    const navigate = useNavigate();\r\n\r\n    return (\r\n        <div className=\"display-container\">\r\n            <div className=\"top-message\">\r\n                Welcome to the Challenges Page!\r\n            </div>\r\n            <a className=\"orange-link\" onClick={() => { navigate(\"/dashboard\"); }}>Dashboard Page!</a>\r\n            <a className=\"orange-link\" onClick={() => { navigate(\"/createworkoutplan\"); }}>Create Workout Page!</a>\r\n            <a className=\"orange-link\" onClick={() => { navigate(\"/viewworkout\"); }}>View Workout Page!</a>\r\n            <a className=\"orange-link\" onClick={() => { navigate(\"/social\"); }}>Social Page!</a>\r\n            <a className=\"orange-link\" onClick={() => { navigate(\"/challenges\"); }}>Challenges Page!</a>\r\n            <a className=\"orange-link\" onClick={() => { navigate(\"/settings\"); }}>Settings Page!</a>\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default Challenges; */\r\n/*\r\nimport React from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport './ChallengeDetail.css'; // Ensure this is the correct path to your CSS file\r\n*/\r\n\r\n/*function Challenges() {\r\n    const navigate = useNavigate();\r\n\r\n    // You would fetch the actual challenges from your state or props\r\n    const challenges = [\r\n        { id: 1, name: 'MIKEYLIFTS204', description: 'Deadlift, Bench Pre...' },\r\n        { id: 2, name: 'JAGRUTIGAINZ333', description: 'Squat, Incline Dumbe...' },\r\n        // ... other challenges\r\n    ];\r\n\r\n    return (\r\n        <div className=\"challenge-layout\">\r\n            <aside className=\"sidebar\">\r\n                <h1>Challenges Home Page</h1>\r\n                <div className=\"challenge-list\">\r\n                    {challenges.map(challenge => (\r\n                        <div key={challenge.id} className=\"challenge-item\" onClick={() => navigate('/challenge/${challenge.id}')}>\r\n                            <div className=\"challenge-title\">{challenge.name}</div>\r\n                            <div className=\"challenge-description\">{challenge.description}</div>\r\n                        </div>\r\n                    ))}\r\n                </div>\r\n                <button className=\"new-challenge-btn\" onClick={() => navigate('/new-challenge')}>New Challenge</button>\r\n            </aside>\r\n\r\n            <footer className=\"bottom-nav\">\r\n                <span onClick={() => navigate('/home')}>H</span>\r\n                <span onClick={() => navigate('/challenges')}>CHL</span>\r\n                <span onClick={() => navigate('/friends')}>FRN</span>\r\n                <span onClick={() => navigate('/settings')}>SET</span>\r\n            </footer>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Challenges;\r\n*/\r\n\r\n/*\r\n\r\nfunction Challenges() {\r\n    const navigate = useNavigate();\r\n\r\n    const challenges = [\r\n        { id: 1, name: 'MIKEYLIFTS204', description: 'Deadlift, Bench Pre...' },\r\n        { id: 2, name: 'JAGRUTIGAINZ333', description: 'Squat, Incline Dumbe...' },\r\n        // ... other challenges\r\n    ];\r\n\r\n    const navigateToChallenge = (id) => {\r\n        navigate('/challenge/${id}');\r\n    };\r\n\r\n    const navigateToNewChallenge = () => {\r\n        navigate('/new-challenge');\r\n    };\r\n\r\n    return (\r\n        <div className=\"challenge-layout\">\r\n            <header className=\"challenge-header\">\r\n                <h1>Challenges Home Page</h1>\r\n            </header>\r\n            \r\n            <div className=\"challenge-list\">\r\n                {challenges.map(challenge => (\r\n                    <div key={challenge.id} className=\"challenge-item\" onClick={() => navigateToChallenge(challenge.id)}>\r\n                        <div className=\"challenge-name\">{challenge.name}</div>\r\n                        <div className=\"challenge-description\">{challenge.description}</div>\r\n                    </div>\r\n                ))}\r\n                <button className=\"new-challenge-btn\" onClick={navigateToNewChallenge}>New Challenge</button>\r\n            </div>\r\n\r\n            <footer className=\"bottom-nav\">\r\n                <span onClick={() => navigate('/home')}>H</span>\r\n                <span onClick={() => navigate('/challenges')}>CHL</span>\r\n                <span onClick={() => navigate('/friends')}>FRN</span>\r\n                <span onClick={() => navigate('/settings')}>SET</span>\r\n            </footer>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Challenges;\r\n*/\r\n\r\n/*\r\nfunction Challenges() {\r\n    const navigate = useNavigate();\r\n\r\n    const [selectedChallenge, setSelectedChallenge] = useState(null);\r\n\r\n    const challenges = [\r\n        {\r\n            id: 1,\r\n            name: 'MIKEYLIFTS204',\r\n            exercises: [\r\n                { name: 'Deadlift', sets: ['5 reps', '3 reps', '1 rep', '3 reps'] },\r\n                { name: 'Bench Press', sets: ['8 reps', '4 reps', '2 reps', '1 rep'] },\r\n            ]\r\n        },\r\n        // Assume similar structure for other challenges...\r\n    ];\r\n\r\n    const selectChallenge = (challengeId) => {\r\n        const challenge = challenges.find(c => c.id === challengeId);\r\n        setSelectedChallenge(challenge);\r\n    };\r\n\r\n    const createNewChallenge = () => {\r\n        setSelectedChallenge({\r\n            id: challenges.length + 1,\r\n            name: '',\r\n            exercises: []\r\n        });\r\n        // Optionally navigate to a different route if necessary\r\n        // navigate('/new-challenge');\r\n    };\r\n\r\n    return (\r\n        <div className=\"challenge-layout\">\r\n            <header className=\"challenge-header\">\r\n                <h1>{selectedChallenge ? '${selectedChallenge.name} CHALLENGES YOU!' :'Challenges Home Page'}</h1>\r\n            </header>\r\n\r\n            <div className=\"challenge-list\">\r\n                {!selectedChallenge &&\r\n                    challenges.map((challenge) => (\r\n                        <div key={challenge.id} className=\"challenge-item\" onClick={() => selectChallenge(challenge.id)}>\r\n                            <div className=\"challenge-name\">{challenge.name}</div>\r\n                        </div>\r\n                    ))\r\n                }\r\n                {!selectedChallenge && <button className=\"new-challenge-btn\" onClick={createNewChallenge}>New Challenge</button>}\r\n\r\n                {selectedChallenge && selectedChallenge.exercises.map((exercise, index) => (\r\n                    <div key={index} className=\"exercise-detail\">\r\n                        <h2 className=\"exercise-name\">{exercise.name}</h2>\r\n                        {exercise.sets.map((set, index) => (\r\n                            <div key={index} className=\"set-detail\">{set}</div>\r\n                        ))}\r\n                        <button className=\"max-button\">Your Max</button>\r\n                    </div>\r\n                ))}\r\n            </div>\r\n\r\n            <footer className=\"bottom-nav\">\r\n                <span onClick={() => navigate('/home')}>H</span>\r\n                <span onClick={() => navigate('/challenges')}>CHL</span>\r\n                <span onClick={() => navigate('/friends')}>FRN</span>\r\n                <span onClick={() => navigate('/settings')}>SET</span>\r\n            </footer>\r\n        </div>\r\n    );\r\n}\r\n\r\n*/\r\n\r\n\r\nfunction Challenges() {\r\n    const navigate = useNavigate();\r\n    const [selectedChallenge, setSelectedChallenge] = useState(null);\r\n\r\n    const challenges = [\r\n        {\r\n            id: 1,\r\n            name: 'MIKEYLIFTS204',\r\n            exercises: [\r\n                { name: 'Deadlift', sets: ['5 reps', '3 reps', '1 rep', '3 reps'] },\r\n                { name: 'Bench Press', sets: ['8 reps', '4 reps', '2 reps', '1 rep'] },\r\n            ]\r\n        },\r\n        // Additional challenges can be similarly structured\r\n        {\r\n             id: 2,\r\n             name: 'JAGRUTIGAINZ333',\r\n            exercises: [\r\n                { name: 'Deadlift', sets: ['3 reps', '5 reps', '1 rep', '3 reps'] },\r\n                { name: 'Squats', sets: ['8 reps', '4 reps', '2 reps', '1 rep'] },\r\n            ]\r\n        }\r\n    ];\r\n\r\n    const selectChallenge = (challengeId) => {\r\n        const challenge = challenges.find(c => c.id === challengeId);\r\n        setSelectedChallenge(challenge);\r\n    };\r\n\r\n    const createNewChallenge = () => {\r\n        navigate('/friends'); // Redirects to the Friends page for selecting friends to challenge\r\n    };\r\n\r\n    return (\r\n        <div className=\"challenge-layout\">\r\n            <header className=\"challenge-header\">\r\n                <h1>{selectedChallenge ? `${selectedChallenge.name.toUpperCase()} CHALLENGES YOU!` : 'Challenges Home Page'}</h1>\r\n            </header>\r\n            <div className=\"challenge-list\">\r\n                {!selectedChallenge &&\r\n                    challenges.map((challenge) => (\r\n                        <div key={challenge.id} className=\"challenge-item\" onClick={() => selectChallenge(challenge.id)}>\r\n                            <div className=\"challenge-name\">{challenge.name}</div>\r\n                        </div>\r\n                    ))\r\n                }\r\n                {!selectedChallenge && <button className=\"new-challenge-btn\" onClick={() => { navigate('/social')}}>New Challenge</button>}\r\n                {selectedChallenge && selectedChallenge.exercises.map((exercise, index) => (\r\n                    <div key={index} className=\"exercise-detail\">\r\n                        <h2 className=\"exercise-name\">{exercise.name}</h2>\r\n                        {exercise.sets.map((set, index) => (\r\n                            <div key={index} className=\"set-detail\">{set}</div>\r\n                        ))}\r\n                        <button className=\"max-button\">Record Your Max</button>\r\n                    </div>\r\n                ))}\r\n            </div>\r\n            <footer className=\"bottom-nav\">\r\n                <span onClick={() => navigate('/home')}>HOME</span>\r\n                <span onClick={() => navigate('/challenges')}>CHALLENGES</span>\r\n                <span onClick={() => navigate('/friends')}>FRIENDS</span>\r\n                <span onClick={() => navigate('/settings')}>SETTINGS</span>\r\n            </footer>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Challenges;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}