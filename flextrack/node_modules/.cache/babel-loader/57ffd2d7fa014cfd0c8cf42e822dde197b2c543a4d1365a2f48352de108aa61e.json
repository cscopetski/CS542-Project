{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\lukec\\\\WPI_Senior_Year\\\\Semester_2\\\\Database Management Systems\\\\Final_Project\\\\flextrack\\\\src\\\\createworkoutplan\\\\CreateWorkoutPlan.js\",\n  _s = $RefreshSig$();\nimport { useEffect, useState, useRef } from \"react\";\nimport './CreateWorkoutPlan.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction CreateWorkoutPlan(props) {\n  _s();\n  const [title, setTitle] = useState('My Workout');\n  const [isEditing, setIsEditing] = useState({});\n  const titleRefs = useRef({});\n  const workoutRoutines = {\n    \"Push Pull Legs\": {\n      days: [\"Monday\", \"Wednesday\", \"Friday\"]\n    },\n    \"5 Day Split\": {\n      days: [\"Monday\", \"Tuesday\", \"Wednesday\", \"Thursday\", \"Friday\"]\n    },\n    \"NSuns Program\": {\n      days: [\"Monday\", \"Tuesday\", \"Wednesday\", \"Thursday\", \"Friday\", \"Saturday\"]\n    }\n  };\n  const toggleEditing = routineName => {\n    setIsEditing(prev => ({\n      ...prev,\n      [routineName]: !prev[routineName]\n    }));\n  };\n  const handleTitleChange = (routineName, value) => {\n    setTitle(prev => ({\n      ...prev,\n      [routineName]: value\n    }));\n  };\n  const handleBlur = routineName => {\n    setIsEditing(prev => ({\n      ...prev,\n      [routineName]: false\n    }));\n  };\n\n  // Function to interpolate color\n  const interpolateColor = (index, total) => {\n    const startColor = [0xF5, 0x85, 0x28]; // RGB for #F58528\n    const endColor = [0xFE, 0x5C, 0x54]; // RGB for #FE5C54\n    const step = index / (total - 1);\n    const interpolatedColor = startColor.map((start, i) => {\n      const end = endColor[i];\n      const interpolated = Math.round(start + (end - start) * step);\n      return interpolated.toString(16).padStart(2, '0'); // Convert to hex string, padded to 2 chars\n    }).join('');\n    return `#${interpolatedColor}`;\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"display-container\",\n    children: Object.entries(workoutRoutines).map(([routineName, details]) => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"exercise-wrapper\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"exercise-content align-items-center\",\n        children: [isEditing[routineName] ? /*#__PURE__*/_jsxDEV(\"input\", {\n          ref: titleRefs.current[routineName],\n          type: \"text\",\n          value: title[routineName] || routineName,\n          onChange: e => handleTitleChange(routineName, e.target.value),\n          onBlur: () => handleBlur(routineName),\n          className: \"title-input\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 29\n        }, this) : /*#__PURE__*/_jsxDEV(\"h1\", {\n          className: \"workout-title\",\n          style: \"margin-top: 1rem\",\n          onClick: () => toggleEditing(routineName),\n          children: title[routineName] || routineName\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 29\n        }, this), details.days.map((day, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"login\",\n          style: {\n            backgroundImage: 'none',\n            backgroundColor: interpolateColor(index, details.days.length)\n          },\n          children: day\n        }, `${routineName}-${day}`, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 29\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 21\n      }, this)\n    }, routineName, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 17\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 9\n  }, this);\n}\n_s(CreateWorkoutPlan, \"go3nDycEOP8rQywnGEQB3B335M0=\");\n_c = CreateWorkoutPlan;\nexport default CreateWorkoutPlan;\nvar _c;\n$RefreshReg$(_c, \"CreateWorkoutPlan\");","map":{"version":3,"names":["useEffect","useState","useRef","jsxDEV","_jsxDEV","CreateWorkoutPlan","props","_s","title","setTitle","isEditing","setIsEditing","titleRefs","workoutRoutines","days","toggleEditing","routineName","prev","handleTitleChange","value","handleBlur","interpolateColor","index","total","startColor","endColor","step","interpolatedColor","map","start","i","end","interpolated","Math","round","toString","padStart","join","className","children","Object","entries","details","ref","current","type","onChange","e","target","onBlur","fileName","_jsxFileName","lineNumber","columnNumber","style","onClick","day","backgroundImage","backgroundColor","length","_c","$RefreshReg$"],"sources":["C:/Users/lukec/WPI_Senior_Year/Semester_2/Database Management Systems/Final_Project/flextrack/src/createworkoutplan/CreateWorkoutPlan.js"],"sourcesContent":["import { useEffect, useState, useRef } from \"react\";\r\nimport './CreateWorkoutPlan.css';\r\n\r\nfunction CreateWorkoutPlan(props) {\r\n    const [title, setTitle] = useState('My Workout');\r\n    const [isEditing, setIsEditing] = useState({});\r\n    const titleRefs = useRef({});\r\n\r\n    const workoutRoutines = {\r\n        \"Push Pull Legs\": {\r\n            days: [\"Monday\", \"Wednesday\", \"Friday\"]\r\n        },\r\n        \"5 Day Split\": {\r\n            days: [\"Monday\", \"Tuesday\", \"Wednesday\", \"Thursday\", \"Friday\"]\r\n        },\r\n        \"NSuns Program\": {\r\n            days: [\"Monday\", \"Tuesday\", \"Wednesday\", \"Thursday\", \"Friday\", \"Saturday\"]\r\n        }\r\n    };\r\n\r\n    const toggleEditing = (routineName) => {\r\n        setIsEditing(prev => ({ ...prev, [routineName]: !prev[routineName] }));\r\n    };\r\n\r\n    const handleTitleChange = (routineName, value) => {\r\n        setTitle(prev => ({ ...prev, [routineName]: value }));\r\n    };\r\n\r\n    const handleBlur = (routineName) => {\r\n        setIsEditing(prev => ({ ...prev, [routineName]: false }));\r\n    };\r\n\r\n    // Function to interpolate color\r\n    const interpolateColor = (index, total) => {\r\n        const startColor = [0xF5, 0x85, 0x28]; // RGB for #F58528\r\n        const endColor = [0xFE, 0x5C, 0x54];   // RGB for #FE5C54\r\n        const step = index / (total - 1);\r\n\r\n        const interpolatedColor = startColor.map((start, i) => {\r\n            const end = endColor[i];\r\n            const interpolated = Math.round(start + (end - start) * step);\r\n            return interpolated.toString(16).padStart(2, '0'); // Convert to hex string, padded to 2 chars\r\n        }).join('');\r\n\r\n        return `#${interpolatedColor}`;\r\n    };\r\n\r\n    return (\r\n        <div className=\"display-container\">\r\n            {Object.entries(workoutRoutines).map(([routineName, details]) => (\r\n                <div key={routineName} className=\"exercise-wrapper\">\r\n                    <div className=\"exercise-content align-items-center\">\r\n                        {isEditing[routineName] ? (\r\n                            <input\r\n                                ref={titleRefs.current[routineName]}\r\n                                type=\"text\"\r\n                                value={title[routineName] || routineName}\r\n                                onChange={(e) => handleTitleChange(routineName, e.target.value)}\r\n                                onBlur={() => handleBlur(routineName)}\r\n                                className=\"title-input\"\r\n                            />\r\n                        ) : (\r\n                            <h1 className=\"workout-title\" style=\"margin-top: 1rem\" onClick={() => toggleEditing(routineName)}>{title[routineName] || routineName}</h1>\r\n                        )}\r\n                        {details.days.map((day, index) => (\r\n                            <div key={`${routineName}-${day}`} className=\"login\" style={{ backgroundImage: 'none', backgroundColor: interpolateColor(index, details.days.length) }}>\r\n                                {day}\r\n                            </div>\r\n                        ))}\r\n                    </div>\r\n                </div>\r\n            ))}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default CreateWorkoutPlan;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}