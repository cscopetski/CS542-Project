{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\lukec\\\\WPI_Senior_Year\\\\Semester_2\\\\Database Management Systems\\\\Final_Project\\\\flextrack\\\\src\\\\posts\\\\Posts.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport './Posts.css';\nimport axios from 'axios';\nimport Loading from '../loading/Loading';\nimport { Modal, Button, Form } from 'react-bootstrap';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst instance = axios.create({\n  withCredentials: true,\n  baseURL: 'http://localhost:5000/api/post'\n});\nfunction Posts(props) {\n  _s();\n  const navigate = useNavigate();\n  const [posts, setPosts] = useState();\n  const [update, setUpdate] = useState(false);\n  const [showModal, setShowModal] = useState(false);\n  const [postTitle, setPostTitle] = useState('');\n  const [postText, setPostText] = useState('');\n  useEffect(() => {\n    getPosts().then(res => {\n      setPosts(res.data);\n    }).catch(err => {\n      console.error(err);\n    });\n  }, [update]);\n  const handleMakePost = async () => {\n    if (postTitle && postText) {\n      const newPost = {\n        title: postTitle,\n        caption: postText,\n        date: new Date()\n      };\n      await createPost(newPost).then(res => {\n        setPosts(res.data);\n        setShowModal(false); // Close modal after post creation\n        setPostTitle(''); // Reset the title state\n        setPostText(''); // Reset the text state\n      }).catch(err => {\n        console.error(err);\n      });\n      setUpdate(!update);\n    }\n  };\n  const handleModalClose = () => setShowModal(false);\n  const handleModalShow = () => setShowModal(true);\n  if (posts === undefined) {\n    return /*#__PURE__*/_jsxDEV(Loading, {\n      margin: 0,\n      minHeight: \"1000px\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 16\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"display-container\",\n    style: {\n      alignItems: 'flex-start'\n    },\n    children: [/*#__PURE__*/_jsxDEV(Button, {\n      onClick: handleModalShow,\n      className: \"make-posts-button\",\n      children: \"Make a Post\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Modal, {\n      show: showModal,\n      onHide: handleModalClose,\n      children: [/*#__PURE__*/_jsxDEV(Modal.Header, {\n        closeButton: true,\n        children: /*#__PURE__*/_jsxDEV(Modal.Title, {\n          children: \"Make a New Post\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Modal.Body, {\n        children: /*#__PURE__*/_jsxDEV(Form, {\n          children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n            className: \"mb-3\",\n            children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n              children: \"Title\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 69,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n              type: \"text\",\n              placeholder: \"Enter post title\",\n              value: postTitle,\n              onChange: e => setPostTitle(e.target.value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 70,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n            className: \"mb-3\",\n            children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n              children: \"Post Text\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 78,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n              as: \"textarea\",\n              rows: 3,\n              placeholder: \"What's on your mind?\",\n              value: postText,\n              onChange: e => setPostText(e.target.value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 79,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 77,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Modal.Footer, {\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          variant: \"secondary\",\n          onClick: handleModalClose,\n          children: \"Close\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"primary\",\n          onClick: handleMakePost,\n          children: \"Post\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 60,\n    columnNumber: 9\n  }, this);\n}\n_s(Posts, \"wK7tRTqNJteVT9HQ2qsU420vbRA=\", false, function () {\n  return [useNavigate];\n});\n_c = Posts;\nexport default Posts;\nvar _c;\n$RefreshReg$(_c, \"Posts\");","map":{"version":3,"names":["React","useState","useEffect","useNavigate","axios","Loading","Modal","Button","Form","jsxDEV","_jsxDEV","instance","create","withCredentials","baseURL","Posts","props","_s","navigate","posts","setPosts","update","setUpdate","showModal","setShowModal","postTitle","setPostTitle","postText","setPostText","getPosts","then","res","data","catch","err","console","error","handleMakePost","newPost","title","caption","date","Date","createPost","handleModalClose","handleModalShow","undefined","margin","minHeight","fileName","_jsxFileName","lineNumber","columnNumber","className","style","alignItems","children","onClick","show","onHide","Header","closeButton","Title","Body","Group","Label","Control","type","placeholder","value","onChange","e","target","as","rows","Footer","variant","_c","$RefreshReg$"],"sources":["C:/Users/lukec/WPI_Senior_Year/Semester_2/Database Management Systems/Final_Project/flextrack/src/posts/Posts.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport './Posts.css';\r\nimport axios from 'axios';\r\nimport Loading from '../loading/Loading';\r\nimport { Modal, Button, Form } from 'react-bootstrap';\r\n\r\nconst instance = axios.create({\r\n    withCredentials: true,\r\n    baseURL: 'http://localhost:5000/api/post'\r\n});\r\n\r\nfunction Posts(props) {\r\n    const navigate = useNavigate();\r\n    const [posts, setPosts] = useState();\r\n    const [update, setUpdate] = useState(false);\r\n    const [showModal, setShowModal] = useState(false);\r\n    const [postTitle, setPostTitle] = useState('');\r\n    const [postText, setPostText] = useState('');\r\n\r\n    useEffect(() => {\r\n        getPosts()\r\n            .then((res) => {\r\n                setPosts(res.data);\r\n            })\r\n            .catch((err) => {\r\n                console.error(err);\r\n            });\r\n    }, [update]);\r\n\r\n    const handleMakePost = async () => {\r\n        if (postTitle && postText) {\r\n            const newPost = {\r\n                title: postTitle,\r\n                caption: postText,\r\n                date: new Date(),\r\n            };\r\n            await createPost(newPost)\r\n                .then((res) => {\r\n                    setPosts(res.data);\r\n                    setShowModal(false); // Close modal after post creation\r\n                    setPostTitle('');  // Reset the title state\r\n                    setPostText('');   // Reset the text state\r\n                })\r\n                .catch((err) => {\r\n                    console.error(err);\r\n                });\r\n            setUpdate(!update);\r\n        }\r\n    };\r\n\r\n    const handleModalClose = () => setShowModal(false);\r\n    const handleModalShow = () => setShowModal(true);\r\n\r\n    if (posts === undefined) {\r\n        return <Loading margin={0} minHeight={\"1000px\"} />;\r\n    }\r\n\r\n    return (\r\n        <div className=\"display-container\" style={{ alignItems: 'flex-start' }}>\r\n            <Button onClick={handleModalShow} className=\"make-posts-button\">Make a Post</Button>\r\n            <Modal show={showModal} onHide={handleModalClose}>\r\n                <Modal.Header closeButton>\r\n                    <Modal.Title>Make a New Post</Modal.Title>\r\n                </Modal.Header>\r\n                <Modal.Body>\r\n                    <Form>\r\n                        <Form.Group className=\"mb-3\">\r\n                            <Form.Label>Title</Form.Label>\r\n                            <Form.Control\r\n                                type=\"text\"\r\n                                placeholder=\"Enter post title\"\r\n                                value={postTitle}\r\n                                onChange={e => setPostTitle(e.target.value)}\r\n                            />\r\n                        </Form.Group>\r\n                        <Form.Group className=\"mb-3\">\r\n                            <Form.Label>Post Text</Form.Label>\r\n                            <Form.Control\r\n                                as=\"textarea\"\r\n                                rows={3}\r\n                                placeholder=\"What's on your mind?\"\r\n                                value={postText}\r\n                                onChange={e => setPostText(e.target.value)}\r\n                            />\r\n                        </Form.Group>\r\n                    </Form>\r\n                </Modal.Body>\r\n                <Modal.Footer>\r\n                    <Button variant=\"secondary\" onClick={handleModalClose}>\r\n                        Close\r\n                    </Button>\r\n                    <Button variant=\"primary\" onClick={handleMakePost}>\r\n                        Post\r\n                    </Button>\r\n                </Modal.Footer>\r\n            </Modal>\r\n            {/* Post display logic remains the same */}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Posts;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}